<!-- <script lang="ts">
  import type { Part, PartVersion } from '$lib/types';
  import { formatDate } from '$lib/utils';
  export let part: Part;
  export let currentVersion: PartVersion;

  // Helper function to format JSON data for display
  function formatJson(json: any): string {
    if (!json) return 'Not specified';
    return JSON.stringify(json, null, 2);
  }

  // Helper function to display units with values
  function formatWithUnit(value: number | null | undefined, unit: string | null | undefined, defaultText = 'Not specified'): string {
    if (value === null || value === undefined) return defaultText;
    return `${value}${unit ? ` ${unit}` : ''}`;
  }
</script>

<div class="part-card">
  <header class="card-header">
    <h1>{currentVersion.name} <span class="part-number">{part.globalPartNumber || part.id}</span></h1>
    <div class="status-badges">
      <span class="badge status-badge">{part.status}</span>
      <span class="badge lifecycle-badge">{part.lifecycleStatus}</span>
      {#if part.isPublic}
        <span class="badge public-badge">Public</span>
      {/if}
    </div>
  </header>

  <!-- Basic Information -->
  <section class="card basic-info">
    <h2>Basic Information</h2>
    <div class="grid-2">
      <div>
        <p><strong>Name:</strong> {currentVersion.name}</p>
        <p><strong>Version:</strong> {currentVersion.version} (raw: {JSON.stringify(currentVersion)})</p>
        <p><strong>Global Part Number:</strong> {part.globalPartNumber || 'Not assigned'}</p>
      </div>
      <div>
        <p><strong>Status:</strong> {part.status}</p>
        <p><strong>Lifecycle Status:</strong> {part.lifecycleStatus}</p>
        <p><strong>Public:</strong> {part.isPublic ? 'Yes' : 'No'}</p>
      </div>
    </div>
    {#if currentVersion.shortDescription}
      <div class="description">
        <h3>Description</h3>
        <p>{currentVersion.shortDescription}</p>
      </div>
    {/if}
  </section>

  <!-- Technical Specifications -->
  <section class="card tech-specs">
    <h2>Technical Specifications</h2>
    <div class="grid-2">
      <!-- Electrical Properties -->
      <div class="subsection">
        <h3>Electrical Properties</h3>
        <p><strong>Voltage Rating:</strong> 
          {#if currentVersion.voltageRatingMin !== undefined && currentVersion.voltageRatingMax !== undefined}
            {currentVersion.voltageRatingMin}V - {currentVersion.voltageRatingMax}V
          {:else if currentVersion.voltageRatingMax !== undefined}
            Max {currentVersion.voltageRatingMax}V
          {:else}
            Not specified
          {/if}
        </p>
        <p><strong>Current Rating:</strong> 
          {#if currentVersion.currentRatingMin !== undefined && currentVersion.currentRatingMax !== undefined}
            {currentVersion.currentRatingMin}A - {currentVersion.currentRatingMax}A
          {:else if currentVersion.currentRatingMax !== undefined}
            Max {currentVersion.currentRatingMax}A
          {:else}
            Not specified
          {/if}
        </p>
        <p><strong>Power Rating:</strong> 
          {formatWithUnit(currentVersion.powerRatingMax, 'W')}
        </p>
        <p><strong>Tolerance:</strong> 
          {formatWithUnit(currentVersion.tolerance, currentVersion.toleranceUnit)}
        </p>
        {#if currentVersion.electricalProperties}
          <details>
            <summary>Additional Electrical Properties</summary>
            <pre>{formatJson(currentVersion.electricalProperties)}</pre>
          </details>
        {/if}
      </div>

      <!-- Mechanical Properties -->
      <div class="subsection">
        <h3>Mechanical Properties</h3>
        <p><strong>Package Type:</strong> {currentVersion.packageType || 'Not specified'}</p>
        <p><strong>Pin Count:</strong> {currentVersion.pinCount !== undefined ? currentVersion.pinCount : 'Not specified'}</p>
        <p><strong>Weight:</strong> {formatWithUnit(currentVersion.weight, currentVersion.weightUnit)}</p>

        {#if currentVersion.dimensions}
          <p><strong>Dimensions (L×W×H):</strong> 
            {(currentVersion.dimensions as any)?.length ?? '?'} × {(currentVersion.dimensions as any)?.width ?? '?'} × {(currentVersion.dimensions as any)?.height ?? '?'} 
            {currentVersion.dimensionsUnit || ''}
          </p>
        {/if}

        {#if currentVersion.mechanicalProperties}
          <details>
            <summary>Additional Mechanical Properties</summary>
            <pre>{formatJson(currentVersion.mechanicalProperties)}</pre>
          </details>
        {/if}
      </div>
    </div>

    <!-- Thermal Properties -->
    <div class="subsection">
      <h3>Thermal Properties</h3>
      {#if currentVersion.operatingTemperatureMin !== undefined || currentVersion.operatingTemperatureMax !== undefined}
        <p><strong>Operating Temperature:</strong> {currentVersion.operatingTemperatureMin}°C to {currentVersion.operatingTemperatureMax}°C</p>
      {/if}

      {#if currentVersion.storageTemperatureMin !== undefined || currentVersion.storageTemperatureMax !== undefined}
        <p><strong>Storage Temperature:</strong> {currentVersion.storageTemperatureMin}°C to {currentVersion.storageTemperatureMax}°C</p>
      {/if}

      {#if currentVersion.thermalProperties}
        <details>
          <summary>Additional Thermal Properties</summary>
          <pre>{formatJson(currentVersion.thermalProperties)}</pre>
        </details>
      {/if}
    </div>

    <!-- Additional Properties -->
    {#if currentVersion.materialComposition || currentVersion.properties || currentVersion.environmentalData}
      <div class="subsection">
        <h3>Additional Properties</h3>
        {#if currentVersion.materialComposition}
          <details>
            <summary>Material Composition</summary>
            <pre>{formatJson(currentVersion.materialComposition)}</pre>
          </details>
        {/if}
        {#if currentVersion.environmentalData}
          <details>
            <summary>Environmental Data</summary>
            <pre>{formatJson(currentVersion.environmentalData)}</pre>
          </details>
        {/if}
        {#if currentVersion.properties}
          <details>
            <summary>Other Properties</summary>
            <pre>{formatJson(currentVersion.properties)}</pre>
          </details>
        {/if}
      </div>
    {/if}

    <!-- Technical Information -->
    {#if currentVersion.functionalDescription || currentVersion.technicalSpecifications}
      <div class="subsection">
        <h3>Technical Information</h3>
        {#if currentVersion.functionalDescription}
          <div class="description">
            {currentVersion.functionalDescription}
          </div>
        {/if}
      </div>
    {/if}
  </section>

  <!-- System & Metadata -->
  <section class="card system-metadata">
    <h2>System Information</h2>
    <div class="grid-2">
      <div>
        <p><strong>Part ID:</strong> <span class="monospace">{part.id}</span></p>
        <p><strong>Version ID:</strong> <span class="monospace">{currentVersion.id}</span></p>
        <p><strong>Created:</strong> {formatDate(part.createdAt)}</p>
      </div>
      <div>
        <p><strong>Last Updated:</strong> {formatDate(part.updatedAt)}</p>
        <p><strong>Updated By:</strong> {part.updatedBy || 'N/A'}</p>
        <p><strong>Creator ID:</strong> <span class="monospace">{part.creatorId}</span></p>
      </div>
    </div>
  </section>

  <nav class="actions">
    <a href="/parts/{part.id}/edit" class="btn">Edit</a>
    <a href="/parts" class="btn btn-secondary">Back to Parts</a>
    <form method="POST" action="?delete">
      <button type="submit" class="btn btn-danger">Delete</button>
    </form>
  </nav>
</div>

<style>
  .part-card { max-width: 960px; margin: 1rem auto; color: #333; }
  
  .card-header {
    margin-bottom: 1.5rem;
  }
  
  h1 {
    font-size: 1.8rem;
    margin-bottom: 0.5rem;
  }
  
  .part-number {
    font-size: 1rem;
    color: #666;
    font-weight: normal;
  }
  
  .status-badges {
    display: flex;
    gap: 0.5rem;
    margin: 0.5rem 0;
  }
  
  .badge {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: 500;
  }
  
  .status-badge {
    background-color: #007bff;
    color: white;
  }
  
  .lifecycle-badge {
    background-color: #6c757d;
    color: white;
  }
  
  .public-badge {
    background-color: #28a745;
    color: white;
  }
  
  .card { 
    padding: 1.5rem; 
    margin-bottom: 1.5rem; 
    border: 1px solid #e0e0e0; 
    border-radius: 8px; 
    background: #fff; 
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }
  
  h2 {
    font-size: 1.4rem;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #e0e0e0;
  }
  
  h3 {
    font-size: 1.2rem;
    margin: 1rem 0 0.75rem 0;
    color: #555;
  }
  
  .grid-2 {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
  }
  
  @media (max-width: 768px) {
    .grid-2 {
      grid-template-columns: 1fr;
    }
  }
  
  .subsection {
    margin-bottom: 1.5rem;
  }
  
  p {
    margin: 0.5rem 0;
    line-height: 1.5;
  }
  
  strong {
    font-weight: 600;
    color: #444;
  }
  
  .monospace {
    font-family: monospace;
    font-size: 0.9rem;
    color: #6b6b6b;
  }
  
  details {
    margin: 0.5rem 0;
  }
  
  summary {
    cursor: pointer;
    color: #007bff;
    font-weight: 500;
    margin: 0.5rem 0;
  }
  
  pre {
    background: #f5f5f5;
    padding: 0.75rem;
    border-radius: 4px;
    font-family: monospace;
    font-size: 0.85rem;
    overflow-x: auto;
    margin: 0.5rem 0;
  }
  
  .description {
    background: #f9f9ff;
    padding: 0.75rem 1rem;
    border-radius: 4px;
    margin: 1rem 0;
  }
  
  .system-metadata {
    background: #f9f9f9;
  }
  
  .tech-specs, .basic-info {
    background: #ffffff;
  }
  
  .actions { 
    display: flex; 
    gap: 1rem; 
    margin-top: 2rem;
  }
  
  .btn { 
    background: #007bff; 
    color: #fff; 
    padding: 0.6rem 1.2rem; 
    border: none; 
    border-radius: 4px; 
    text-decoration: none; 
    font-weight: 500;
    cursor: pointer;
    transition: background 0.2s;
  }
  
  .btn:hover {
    background: #0069d9;
  }
  
  .btn-secondary {
    background: #6c757d;
  }
  
  .btn-secondary:hover {
    background: #5a6268;
  }
  
  .btn-danger { 
    background: #dc3545; 
  }
  
  .btn-danger:hover {
    background: #c82333;
  }
</style> -->
